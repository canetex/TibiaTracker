# =============================================================================
# TIBIA TRACKER - VARIÁVEIS DE AMBIENTE - SERVIDOR CORRIGIDO
# =============================================================================
# Arquivo .env corrigido para servidor LXC 192.168.1.227

# =============================================================================
# CONFIGURAÇÕES GERAIS
# =============================================================================
ENVIRONMENT=production
DEBUG=true
SECRET_KEY=taleon123

# =============================================================================
# BANCO DE DADOS - POSTGRESQL ✅ CORRIGIDO
# =============================================================================
DB_HOST=postgres
DB_PORT=5432
DB_NAME=tibia_tracker
DB_USER=tibia_user
DB_PASSWORD=taleondb
DATABASE_URL="postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"

# =============================================================================
# REDIS - CACHE ✅ CORRIGIDO
# =============================================================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=taleonredis
REDIS_URL="redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/0"

# =============================================================================
# API CONFIGURAÇÕES ✅ CORRIGIDO
# =============================================================================
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4
API_RELOAD=false

# =============================================================================
# FRONTEND CONFIGURAÇÕES ✅ CORRIGIDO
# =============================================================================
REACT_APP_API_URL="http://192.168.1.227:8000"
REACT_APP_ENVIRONMENT=production

# =============================================================================
# AUTENTICAÇÃO - GOOGLE
# Portal: https://console.cloud.google.com/auth/clients/1050814946341-ueqrvgmndtl4aj7r14hqbln07991e64l.apps.googleusercontent.com?inv=1&invt=Ab1BvQ&project=tibiatracker-464003
# =============================================================================
GOOGLE_CLIENT_ID=1050814946341-ueqrvgmndtl4aj7r14hqbln07991e64l.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=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
GOOGLE_REDIRECT_URI="http://192.168.1.227/auth/google/callback"

# =============================================================================
# AUTENTICAÇÃO - DISCORD
# Portal: https://discord.com/developers/applications/1387270865129050162/information
# =============================================================================
DISCORD_CLIENT_ID=1387270865129050162
DISCORD_CLIENT_SECRET=a0fc67e3cd3c2b3dccae1c169808a56e1a8c1b493078f3897ede3ff8fac21868
DISCORD_REDIRECT_URI="http://192.168.1.227/auth/discord/callback"

# =============================================================================
# URLS BASE ✅ CORRIGIDO
# =============================================================================
BASE_URL="http://192.168.1.227"
API_BASE_URL="http://192.168.1.227:8000"

# =============================================================================
# JWT TOKENS
# Bash: openssl rand -hex 32
# =============================================================================
JWT_SECRET_KEY=1c40cd9646f021fa7982090abd0e97aee6255b3bd388abc7594cf3fe7389813c
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# =============================================================================
# WEB SCRAPING CONFIGURAÇÕES
# =============================================================================
USER_AGENT="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
SCRAPE_DELAY_SECONDS=2
SCRAPE_TIMEOUT_SECONDS=30
SCRAPE_RETRY_ATTEMPTS=5
SCRAPE_RETRY_DELAY_MINUTES=8

# =============================================================================
# AGENDAMENTO DE TAREFAS
# =============================================================================
SCHEDULER_TIMEZONE=America/Sao_Paulo
DAILY_UPDATE_HOUR=0
DAILY_UPDATE_MINUTE=1

# =============================================================================
# SERVIDORES TIBIA SUPORTADOS
# =============================================================================
TALEON_SAN_URL="https://san.taleon.online"
TALEON_AURA_URL="https://aura.taleon.online"
TALEON_GAIA_URL="https://gaia.taleon.online"

# =============================================================================
# DOCKER & DEPLOY CONFIGURAÇÕES
# =============================================================================
DOCKER_REGISTRY=localhost
DOCKER_TAG=latest
COMPOSE_PROJECT_NAME=tibia-tracker

# =============================================================================
# CADDY (PROXY REVERSO) ✅ CORRIGIDO
# =============================================================================
DOMAIN=192.168.1.227
SSL_EMAIL="admin@192.168.1.227"
CADDY_PORT=80
CADDY_HTTPS_PORT=443

# =============================================================================
# MONITORAMENTO
# =============================================================================
PROMETHEUS_PORT=9090
NODE_EXPORTER_PORT=9100

# =============================================================================
# FIREWALL & SEGURANÇA ✅ CORRIGIDO
# =============================================================================
ALLOWED_ORIGINS="http://192.168.1.227:3000,http://192.168.1.227"
ALLOWED_HOSTS="localhost,127.0.0.1,192.168.1.227"
CORS_ALLOW_CREDENTIALS=true

# =============================================================================
# LOGS
# =============================================================================
LOG_LEVEL=INFO
LOG_FORMAT="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
LOG_FILE="/var/log/tibia-tracker/app.log"

# Testar conexão Redis com senha
echo "=== TESTANDO REDIS ==="
docker-compose exec redis redis-cli -a "$REDIS_PASSWORD" ping

# Verificar logs do Redis
echo "=== LOGS DO REDIS ==="
docker-compose logs redis --tail=20

echo "=== TESTANDO BACKEND DIRETAMENTE ==="

# Testar endpoints específicos
curl -v http://192.168.1.227:8000/
curl -v http://192.168.1.227:8000/health/
curl -v http://192.168.1.227:8000/docs

# Verificar logs do backend
echo "=== LOGS DO BACKEND ==="
docker-compose logs backend --tail=30

echo "=== VERIFICANDO CONFIGURAÇÕES ==="

# Verificar variáveis carregadas no backend
docker-compose exec backend python -c "
from app.core.config import settings
print('ENVIRONMENT:', settings.ENVIRONMENT)
print('DEBUG:', settings.DEBUG)
print('REDIS_URL:', settings.REDIS_URL)
print('Database URL:', settings.DATABASE_URL[:50] + '...')
"

# Verificar estrutura dos endpoints
docker-compose exec backend python -c "
from app.main import app
for route in app.routes:
    if hasattr(route, 'path'):
        print(f'{route.methods if hasattr(route, \"methods\") else \"MOUNT\"} {route.path}')
" 